The ``add_integer`` module
======================

Using ``add_integer``
-------------------

First import ``add_integer`` from the ``0-add_integer`` file:
    >>> add_integer = __import__('0-add_integer').add_integer

Tests:

    Test - regular addition
    >>> add_integer(10, 8)
    18

    Test - Simple addition test with float
    >>> add_integer(5.3, 6.3)
    11

    Test - Simple addition with one float (a) and int (b)
    >>> add_integer(1.6, 2)
    3

    Test - a is not int
    >>> add_integer("string", 2)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    Test - b is not int
    >>> add_integer(2, "string")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    Test - result is infinity and there is float overflow
    >>> add_integer(float("inf"), 2)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    Test - result is infinity and there is float overflow
    >>> add_integer(3, float("inf"))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

    Test - with float NaN
    >>> add_integer(float('NaN'), 3)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

    Test - missing both arguments
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

    Test - missing one argument
    >>> add_integer(1,)
    99
